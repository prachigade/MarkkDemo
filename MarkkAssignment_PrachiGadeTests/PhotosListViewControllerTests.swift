//
//  PhotosListViewControllerTests.swift
//  MarkkAssignment_PrachiGade
//
//  Created by Prachi Gade on 06/11/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import MarkkAssignment_PrachiGade
import XCTest

class PhotosListViewControllerTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: PhotosListViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        window = UIWindow()
        setupPhotosListViewController()
    }
    
    override func tearDown()
    {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupPhotosListViewController()
    {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "PhotosListViewController") as! PhotosListViewController
    }
    
    func loadView()
    {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class PhotosListBusinessLogicSpy: PhotosListBusinessLogic {
        
        
        var listPhotos: [UIImage]?
        
        var listPhotosCalled = false
        
        var doSomethingCalled = false
        
        func getImagesAndUpload(request: PhotosList.UploadPhotos.Request) {
            listPhotosCalled = true
        }
    }
    
    class CollectionViewSpy: UICollectionView {
        
        // MARK: Method call expectations
        var reloadDataCalled = false
        
        // MARK: Spied methods
        override func reloadData() {
            reloadDataCalled = true
        }
    }
    
    // MARK: Tests
    
    func testShouldDisplayUploadedPhotos() {
        // Given
        let collectionviewViewSpy = CollectionViewSpy()
        sut.photosListCollectionView = collectionviewViewSpy
        
        // When
        let photos = PhotosList.UploadPhotos.ViewModel(info: UploadPhotosResponse(photos: Image(image: nil, isUploaded: nil)))
        let viewModel = PhotosList.UploadPhotos.ViewModel(info: photos.info)
        sut.displayPhotos(viewModel: viewModel)
        
        // Then
        XCTAssert(collectionviewViewSpy.reloadDataCalled, "Displaying uploaded photos notes should reload the collection view")
        
    }
}
